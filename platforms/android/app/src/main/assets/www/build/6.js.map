{"version":3,"sources":["../../src/pages/checkout/checkout.module.ts","../../src/app/pipes.module.ts","../../src/app/app.pipe.ts","../../src/pages/checkout/checkout.ts","../../node_modules/@ionic-native/stripe/index.js","../../src/pages/checkout/checkout.service.ts","../../node_modules/@ionic-native/braintree/index.js"],"names":[],"mappings":"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sB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+CAA+C;AAC1D;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,gBAAgB,4BAA4B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB,uDAAuD;AAC/F,gBAAgB,kCAAkC;AAClD;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB,uDAAuD;AACjG,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB,uDAAuD;AACjG,kBAAkB,kCAAkC;AACpD;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+CAA+C;AAC9D;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACE;AACrB,iC","file":"6.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { IonicPageModule } from \"ionic-angular\";\nimport { CheckoutPage } from \"./checkout\";\nimport { PipesModule } from \"../../app/pipes.module\";\n\n@NgModule({\n  declarations: [CheckoutPage],\n  imports: [IonicPageModule.forChild(CheckoutPage), PipesModule],\n  exports: [CheckoutPage]\n})\nexport class CheckoutPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checkout/checkout.module.ts","import { NgModule } from \"@angular/core\";\nimport { AppPipe } from \"./app.pipe\";\nimport { TranslateModule } from \"@ngx-translate/core\";\n\n@NgModule({\n  declarations: [AppPipe],\n  imports: [TranslateModule],\n\n  exports: [TranslateModule, AppPipe]\n})\nexport class PipesModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes.module.ts","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"limitPipe\"\n})\nexport class AppPipe implements PipeTransform {\n  transform(value: string, args: any[]): any {\n    if (value) {\n      let limit = args.length > 0 ? parseInt(args[0], 50) : 50;\n      let trail = args.length > 1 ? args[1] : \"...\";\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.pipe.ts","import { Component } from \"@angular/core\";\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  LoadingController,\n  AlertController\n} from \"ionic-angular\";\nimport { NgForm } from \"@angular/forms\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport {\n  AngularFireDatabase,\n  AngularFireObject,\n  AngularFireList\n} from \"@angular/fire/database\";\n// import {\n//   PayPal,\n//   PayPalPayment,\n//   PayPalConfiguration\n// } from \"@ionic-native/paypal\";\nimport { Stripe } from \"@ionic-native/stripe\";\nimport { CheckoutService } from \"./checkout.service\";\nimport {\n  Braintree,\n  // ApplePayOptions,\n  PaymentUIOptions\n} from \"@ionic-native/braintree\";\nimport { PaystackPage} from '../paystack/paystack'\n\n\n// const payPalEnvironmentSandbox = \"AcgkbqWGamMa09V5xrhVC8bNP0ec9c37DEcT0rXuh7hqaZ6EyHdGyY4FCwQC-fII-s5p8FL0RL8rWPRB\";\nconst publishableKey = \"pk_test_mhy46cSOzzKYuB2MuTWuUb34\";\nconst stripe_secret_key = \"sk_test_GsisHcPqciYyG8arVfVe2amE\";\n\n// const merchantId = \"bbn2tzfk3zbq2jqr\";\n// const public_key = \"d2qg75y3q8zb8rff\";\n// const private_key = \"9cc7ba1d73b912d74e5bb197b24ef6d0\";\nconst braintree_token = \"sandbox_3tt6pwn3_bbn2tzfk3zbq2jqr\";\n// const braintree_token = \"sandbox$4gv8zndgpdy6gnvt$e3c0c77402cbf5ba88bc4c76f1f85dc9\";\n\n@IonicPage()\n@Component({\n  selector: \"page-checkout\",\n  templateUrl: \"checkout.html\",\n  providers: [Stripe, Braintree, CheckoutService] //, PayPal, \n})\nexport class CheckoutPage {\n\n  data:any;\n\n  date: any;\n  orderId: any;\n  order: any = {};\n  public loyaltyLimit: number = 0;\n  userId: any;\n  userDetails: any = {\n    email: \"\",\n    name: \"\",\n    userid: \"\"\n  };\n  checkout: AngularFireList<any>;\n  userDetail: AngularFireObject<any>;\n  bookings: AngularFireObject<any>;\n  color: any;\n  str: any;\n  add: string;\n  paymentType: string;\n  paymentDetails: any = {\n    paymentStatus: true\n  };\n  stripe_card: any = {};\n  \n\n  public paymentTypes: any = [\n    \n   { default: false, type: \"Cash on Delivery\", value: \"COD\", logo: \"assets/img/cod.png\" },\n    {\n      default: false,\n      type: \"Paystack\",\n      value: \"Paystack\",\n      logo: \"assets/img/pay2.png\"\n    },\n    {\n      default: false,\n     type: \"Mobile Wallet\",\n     value: \"Wallet\",\n    logo: \"assets/img/card.png\"\n    }\n ];\n\n\n  payTotal: any;\n  chargeAmount: any;\n  key: string;\n  orderkey: string;\n\n  constructor(\n    public af: AngularFireAuth,\n    public db: AngularFireDatabase,\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    // public payPal: PayPal,\n    public stripe: Stripe,\n    private braintree: Braintree,\n    private checkoutService: CheckoutService,\n    private loadingCtrl: LoadingController,\n    public alertCtrl: AlertController\n  ) {\n     this.order = this.navParams.get(\"orderDetails\");\n    this.loyaltyLimit = this.navParams.get(\"loyaltyLimit\")\n    this.str = \"#\";\n    var num = Math.floor(Math.random() * 900000) + 100000;\n    this.color = this.str.concat(num);\n    this.checkout = db.list(\"/orders\");\n    this.payTotal= this.navParams.get('payTotal');\n    this.chargeAmount = this.payTotal;\n\n    \n  }\n\n  ionViewDidLoad() {\n\n  \n\n\n // this.paymentType = \"Braintree\";\n  if (this.af.auth.currentUser) {\n    this.userId = this.af.auth.currentUser.uid;\n    this.userDetail = this.db.object(\"/users/\" + this.userId);\n     this.userDetail.valueChanges().subscribe((res: any) => {\n      res.mobileNo\n       ? (this.userDetails = {\n          email: res.email,\n          name: res.name,\n          mobileNo: res.mobileNo,\n          userid: this.userId\n         })\n         : (this.userDetails = {\n           email: res.email,\n         name: res.name,\n           userid: this.userId\n         });\n     });\n    }\n }\n\n  choosePaymentType(paymentType) {\n    this.paymentType = paymentType;\n    this.order.paymentType = paymentType;\n    this.paymentDetails.paymentType = paymentType;\n  }\n\n  // paywithBraintree() {\n  //   const paymentOptions: PaymentUIOptions = {\n  //     amount: \"14.99\",\n  //     primaryDescription: \"brain tree payment\"\n  //   };\n\n  //   this.braintree\n  //     .initialize(braintree_token)\n  //     // .then(() => this.braintree.setupApplePay(appleOptions))\n  //     .then(() => this.braintree.presentDropInPaymentUI(paymentOptions))\n  //     .then((result: any) => {\n  //       if (result.userCancelled) {\n  //         console.log(\"User cancelled payment dialog.\");\n  //       } else {\n  //         console.log(\"User successfully completed payment!\");\n  //         console.log(\"Payment Nonce: \" + JSON.stringify(result.nonce));\n  //         console.log(\"Payment Result.\", JSON.stringify(result));\n  //       }\n  //     })\n  //     .catch((error: string) => console.log(\"Error- \" + JSON.stringify(error)));\n  // }\n\n  onCheckOut(form: NgForm) {\n  \n    this.order.orderId = Math.floor(Math.random() * 90000) + 10000;\n   // this.order.userDetails = this.userDetails;\n    this.order.userId = this.userId;\n    this.order.createdAt = Date.now();\n    this.order.status = \"Pending\";\n    this.order.paymentStatus = \"Pending\";\n    this.order.note = \"Your order is being Processed.\";\n    this.order.ntime = Date.now();\n   delete this.order.shippingAddress;\n   // this.order.statusReading = [\n   //   {\n   //     title: \"Your order has been accepted. You will get notified the status here.\",\n   //     time: Date.now()\n   //   }\n   // ];\n      //new data\n\n\n\n  \n    if (this.paymentType == \"Paystack\") {\n      if (this.order.appliedLoyaltyPoints == true) {\n\n        this.showAlert(\"You have selected the option to pay from wallet! Complete your order by selecting 'Mobile Wallet' and 'Proceed'\");\n\n      // const config = {\n      //   PayPalEnvironmentProduction: \"\",\n      //   PayPalEnvironmentSandbox: payPalEnvironmentSandbox\n      // };\n //     this.checkout.push(this.order).then(res => {\n //       const paymentOptions: PaymentUIOptions = {\n //         amount: this.order.grandTotal,\n  //        primaryDescription: \"brain tree payment\"\n //       };\n  //      this.braintree.initialize(braintree_token)\n  //        .then(() => this.braintree.presentDropInPaymentUI(paymentOptions))\n  //        .then((result: any) => {\n     //       if (result.userCancelled) {\n    //          console.log(\"User cancelled payment dialog.\");\n    //        } else {\n    //          this.paymentDetails.transactionId = result.clientMetadataId;\n     //         this.saveLoyaltyData(res.key);\n   //           this.db.object(\"/orders/\" + res.key).update({\n   //             paymentDetails: this.paymentDetails,\n    //            paymentStatus: \"success\"\n      //        }).then(() => {\n      //          this.navCtrl.setRoot(\"ThankyouPage\");\n     //         });\n     //       }\n     //     }).catch((error: any) => {\n   //         if (error.message) {\n       //       this.showAlert(error.message);\n     //       }\n   //       });\n  //    });\n      \n    } else {\n      let loader = this.loadingCtrl.create({\n        content: \"please wait..\"\n      });\n      loader.present();\n      this.checkout.push(this.order).then(res => {\n\n        console.log(\"order placed ! \" + JSON.stringify(res));\n        this.saveLoyaltyData(res.key);\n\n      let data = {\n\n        price: this.order.grandTotal,\n        email: this.userDetails.email,\n        key: res.key\n        \n        };\n        \n        this.navCtrl.push(PaystackPage, data);\n        loader.dismiss();\n      });\n\n    }\n\n    } else if (this.paymentType == \"Mobile Wallet\") {\n\n      if (this.order.appliedLoyaltyPoints == true) {\n\n           let loader = this.loadingCtrl.create({\n    //  content: \"Please wait..\",\n      spinner: \"dots\",\n      cssClass: 'my-loading-class'\n    });\n        loader.present();\n\n        this.checkout.push(this.order).then(res => {\n\n\n\n          console.log(\"order placed ! \" + JSON.stringify(res));\n          this.saveLoyaltyData(res.key);\n          this.db.object(\"/orders/\" + res.key).update({\n            paymentStatus: \"Approved\"\n          })\n          this.navCtrl.setRoot(\"ThankyouPage\");\n          loader.dismiss();\n        });\n      }\n          else {\n            this.showAlert(\"You have not selected the option to pay from wallet! Please go back and select 'Pay from Wallet'\");\n          }\n      \n        \n      //order with COD\n    } else if (this.paymentType == \"Cash on Delivery\") {\n\n      if (this.order.appliedLoyaltyPoints == true) {\n\n        this.showAlert(\"You have selected the option to pay from wallet! Complete your order by selecting 'Mobile Wallet' and 'Proceed'\");\n      \n      } else {\n\n           let loader = this.loadingCtrl.create({\n    //  content: \"Please wait..\",\n      spinner: \"dots\",\n      cssClass: 'my-loading-class'\n    });\n        loader.present();\n\n        this.checkout.push(this.order).then(res => {\n\n\n\n          console.log(\"order placed ! \" + JSON.stringify(res));\n          this.saveLoyaltyData(res.key);\n          this.navCtrl.setRoot(\"ThankyouPage\");\n          loader.dismiss();\n        });\n\n      }\n    }\n  }\n\n  saveLoyaltyData(orderId) {\n    if (this.order.appliedLoyaltyPoints == true) {\n      let loayltyObj: any = {\n        credit: \"Debit\",\n        points: -Number(this.payTotal),\n        orderId: orderId,\n        message: \"Approved\",\n        createdAt: Date.now()\n      };\n      this.db.list(\"users/\" + this.userId + \"/loyaltyPoints\").push(loayltyObj);\n      this.db.list(\"/orders/\" + orderId + \"/loyaltyPoints\")\n        .push(loayltyObj).then(result => {\n          // console.log(\"loyaltyUpdated-\" + result);\n        });\n    } else {\n      console.log(\"loyalaty Not applied!!\");\n    }\n  }\n\n  showAlert(message) {\n    let alert = this.alertCtrl.create({\n      subTitle: message,\n      buttons: [\"OK\"]\n    });\n    alert.present();\n  }\n\n  contact() {\n    this.navCtrl.push(\"ContactPage\")\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checkout/checkout.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Stripe\n * @description\n * A plugin that allows you to use Stripe's Native SDKs for Android and iOS.\n *\n * @usage\n * ```typescript\n * import { Stripe } from '@ionic-native/stripe';\n *\n * constructor(private stripe: Stripe) { }\n *\n * ...\n *\n * this.stripe.setPublishableKey('my_publishable_key');\n *\n * let card = {\n *  number: '4242424242424242',\n *  expMonth: 12,\n *  expYear: 2020,\n *  cvc: '220'\n * };\n *\n * this.stripe.createCardToken(card)\n *    .then(token => console.log(token))\n *    .catch(error => console.error(error));\n *\n * ```\n *\n * @interfaces\n * StripeCardTokenParams\n */\nvar Stripe = (function (_super) {\n    __extends(Stripe, _super);\n    function Stripe() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Set publishable key\n     * @param publishableKey {string} Publishable key\n     * @return {Promise<void>}\n     */\n    Stripe.prototype.setPublishableKey = function (publishableKey) { return; };\n    /**\n     * Create Credit Card Token\n     * @param params {StripeCardTokenParams} Credit card information\n     * @return {Promise<string>} returns a promise that resolves with the token, or rejects with an error\n     */\n    Stripe.prototype.createCardToken = function (params) { return; };\n    /**\n     * Create a bank account token\n     * @param params {StripeBankAccountParams} Bank account information\n     * @return {Promise<string>} returns a promise that resolves with the token, or rejects with an error\n     */\n    Stripe.prototype.createBankAccountToken = function (params) { return; };\n    /**\n     * Validates a credit card number\n     * @param cardNumber {string} Credit card number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateCardNumber = function (cardNumber) { return; };\n    /**\n     * Validates a CVC number\n     * @param cvc {string} CVC number\n     * @return {Promise<any>} returns a promise that resolves if the number is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateCVC = function (cvc) { return; };\n    /**\n     * Validates an expiry date\n     * @param expMonth {string} expiry month\n     * @param expYear {string} expiry year\n     * @return {Promise<any>} returns a promise that resolves if the date is valid, and rejects if it's invalid\n     */\n    Stripe.prototype.validateExpiryDate = function (expMonth, expYear) { return; };\n    /**\n     * Get a card type from card number\n     * @param cardNumber {string} Card number\n     * @return {Promise<string>} returns a promise that resolves with the credit card type\n     */\n    Stripe.prototype.getCardType = function (cardNumber) { return; };\n    return Stripe;\n}(IonicNativePlugin));\nStripe.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nStripe.ctorParameters = function () { return []; };\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"setPublishableKey\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"createCardToken\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"createBankAccountToken\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"validateCardNumber\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"validateCVC\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String, String]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"validateExpiryDate\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Promise)\n], Stripe.prototype, \"getCardType\", null);\nStripe = __decorate([\n    Plugin({\n        pluginName: 'Stripe',\n        plugin: 'cordova-plugin-stripe',\n        pluginRef: 'cordova.plugins.stripe',\n        repo: 'https://github.com/zyramedia/cordova-plugin-stripe',\n        platforms: ['Android', 'Browser', 'iOS']\n    })\n], Stripe);\nexport { Stripe };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/stripe/index.js\n// module id = 662\n// module chunks = 6","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\n\n@Injectable()\nexport class CheckoutService {\n  constructor(private http: HttpClient) { }\n\n  chargeStripe(token, currency, amount, stripe_secret_key) {\n    let secret_key = stripe_secret_key;\n    const headers = new HttpHeaders()\n      .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n      .set(\"Authorization\", \"Bearer \" + secret_key);\n    var params = new HttpParams()\n      .set(\"currency\", currency)\n      .set(\"amount\", amount)\n      .set(\"description\", \"description\")\n      .set(\"source\", token);\n    return new Promise(resolve => {\n      this.http\n        .post(\"https://api.stripe.com/v1/charges\", params, {\n          headers: headers\n        })\n        .subscribe(data => {\n          resolve(data);\n        });\n    });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/checkout/checkout.service.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Braintree\n * @description\n * This plugin enables the use of the Braintree Drop-In Payments UI in your Ionic applications on Android and iOS, using the native Drop-In UI for each platform (not the Javascript SDK).\n *\n *  Ionic Native utilizes [a maintained fork](https://github.com/taracque/cordova-plugin-braintree) of the original `cordova-plugin-braintree`\n *\n *  For information on how to use Apple Pay with this plugin, please refer to the [plugin documentation](https://github.com/Taracque/cordova-plugin-braintree#apple-pay-ios-only)\n *\n * **NOTE**: This is not a complete payments solution. All of the Braintree client-side UIs simply generate a payment nonce that must then be processed by your server to complete the payment.\n * See the [Braintree Node server documentation](https://developers.braintreepayments.com/start/hello-server/node) for details and a [sample Express server](https://github.com/braintree/braintree_express_example) that implements the required functionality.\n *\n * @usage\n * ```typescript\n * import { Braintree, ApplePayOptions, PaymentUIOptions } from '@ionic-native/braintree';\n *\n * constructor(private braintree: Braintree) { }\n *\n * ...\n *\n * // Your Braintree `Tokenization Key` from the Braintree dashboard.\n * // Alternatively you can also generate this token server-side\n * // using a client ID in order to allow users to use stored payment methods.\n * // See the [Braintree Client Token documentation](https://developers.braintreepayments.com/reference/request/client-token/generate/node#customer_id) for details.\n * const BRAINTREE_TOKEN = '<YOUR_BRAINTREE_TOKEN>';\n *\n * // NOTE: Do not provide this unless you have configured your Apple Developer account\n * // as well as your Braintree merchant account, otherwise the Braintree module will fail.\n * const appleOptions: ApplePayOptions = {\n *   merchantId: '<YOUR MERCHANT ID>',\n *   currency: 'USD',\n *   country: 'US'\n * };\n *\n * const paymentOptions: PaymentUIOptions = {\n *   amount: '14.99',\n *   primaryDescription: 'Your product or service (per /item, /month, /week, etc)',\n * };\n *\n * this.braintree.initialize(BRAINTREE_TOKEN)\n *   .then(() => this.braintree.setupApplePay(appleOptions))\n *   .then(() => this.braintree.presentDropInPaymentUI(paymentOptions))\n *   .then((result: PaymentUIResult) => {\n *     if (result.userCancelled) {\n *       console.log(\"User cancelled payment dialog.\");\n *     } else {\n *       console.log(\"User successfully completed payment!\");\n *       console.log(\"Payment Nonce: \" + result.nonce);\n *       console.log(\"Payment Result.\", result);\n *     }\n *   })\n *   .catch((error: string) => console.error(error));\n *\n * ```\n *\n * @interfaces\n * ApplePayOptions\n * PaymentUIOptions\n * PaymentUIResult\n */\nvar Braintree = (function (_super) {\n    __extends(Braintree, _super);\n    function Braintree() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Used to initialize the Braintree client. This function must be called before other methods can be used.\n     *  As the initialize code is async, be sure you call all Braintree related methods after the initialize promise has resolved.\n     *\n     * @param {string} token The client token or tokenization key to use with the Braintree client.\n     * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n     */\n    /**\n       * Used to initialize the Braintree client. This function must be called before other methods can be used.\n       *  As the initialize code is async, be sure you call all Braintree related methods after the initialize promise has resolved.\n       *\n       * @param {string} token The client token or tokenization key to use with the Braintree client.\n       * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n       */\n    Braintree.prototype.initialize = /**\n       * Used to initialize the Braintree client. This function must be called before other methods can be used.\n       *  As the initialize code is async, be sure you call all Braintree related methods after the initialize promise has resolved.\n       *\n       * @param {string} token The client token or tokenization key to use with the Braintree client.\n       * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n       */\n    function (token) {\n        return;\n    };\n    /**\n     * Used to configure Apple Pay on iOS.\n     *  In order for Apple Pay payments to appear on the Drop-In Payments UI, you must initialize the Apple Pay framework before using the Drop-In Payments UI.\n     *\n     *  Do not turn on Apple Pay in Braintree if you don't have Apple Pay entitlements - the Braintree module will reject the attempt to set up Apple Pay.\n     *  Please refer to the [Braintree Merchant Documentation](https://developers.braintreepayments.com/guides/apple-pay/configuration/ios/v4#apple-pay-certificate-request-and-provisioning) to set up a Merchant Account.\n     *\n     *  Calling this function on Android is a `noop` so you can call it without having to check which cordova platform you are on! :D\n     *\n     * @param {ApplePayOptions}options The options used to configure Apple Pay.\n     * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n     */\n    /**\n       * Used to configure Apple Pay on iOS.\n       *  In order for Apple Pay payments to appear on the Drop-In Payments UI, you must initialize the Apple Pay framework before using the Drop-In Payments UI.\n       *\n       *  Do not turn on Apple Pay in Braintree if you don't have Apple Pay entitlements - the Braintree module will reject the attempt to set up Apple Pay.\n       *  Please refer to the [Braintree Merchant Documentation](https://developers.braintreepayments.com/guides/apple-pay/configuration/ios/v4#apple-pay-certificate-request-and-provisioning) to set up a Merchant Account.\n       *\n       *  Calling this function on Android is a `noop` so you can call it without having to check which cordova platform you are on! :D\n       *\n       * @param {ApplePayOptions}options The options used to configure Apple Pay.\n       * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n       */\n    Braintree.prototype.setupApplePay = /**\n       * Used to configure Apple Pay on iOS.\n       *  In order for Apple Pay payments to appear on the Drop-In Payments UI, you must initialize the Apple Pay framework before using the Drop-In Payments UI.\n       *\n       *  Do not turn on Apple Pay in Braintree if you don't have Apple Pay entitlements - the Braintree module will reject the attempt to set up Apple Pay.\n       *  Please refer to the [Braintree Merchant Documentation](https://developers.braintreepayments.com/guides/apple-pay/configuration/ios/v4#apple-pay-certificate-request-and-provisioning) to set up a Merchant Account.\n       *\n       *  Calling this function on Android is a `noop` so you can call it without having to check which cordova platform you are on! :D\n       *\n       * @param {ApplePayOptions}options The options used to configure Apple Pay.\n       * @return {Promise<undefined | string>} Returns a promise that resolves with undefined on successful initialization, or rejects with a string message describing the failure.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Shows Braintree's Drop-In Payments UI.\n     *  Apple Pay is only shown in the Drop In UI if you have previously called `setupApplePay`.\n     *\n     * @param options {PaymentUIOptions} An optional argument used to configure the payment UI; see type definition for parameters. If not provided, the UI will show \"0.00\" as the price and an empty description.\n     * @return {Promise<PaymentUIResult | string>} Returns a promise that resolves with a PaymentUIResult object on successful payment (or the user cancels), or rejects with a string message describing the failure.\n     */\n    /**\n       * Shows Braintree's Drop-In Payments UI.\n       *  Apple Pay is only shown in the Drop In UI if you have previously called `setupApplePay`.\n       *\n       * @param options {PaymentUIOptions} An optional argument used to configure the payment UI; see type definition for parameters. If not provided, the UI will show \"0.00\" as the price and an empty description.\n       * @return {Promise<PaymentUIResult | string>} Returns a promise that resolves with a PaymentUIResult object on successful payment (or the user cancels), or rejects with a string message describing the failure.\n       */\n    Braintree.prototype.presentDropInPaymentUI = /**\n       * Shows Braintree's Drop-In Payments UI.\n       *  Apple Pay is only shown in the Drop In UI if you have previously called `setupApplePay`.\n       *\n       * @param options {PaymentUIOptions} An optional argument used to configure the payment UI; see type definition for parameters. If not provided, the UI will show \"0.00\" as the price and an empty description.\n       * @return {Promise<PaymentUIResult | string>} Returns a promise that resolves with a PaymentUIResult object on successful payment (or the user cancels), or rejects with a string message describing the failure.\n       */\n    function (options) {\n        return;\n    };\n    Braintree.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            platforms: ['Android', 'iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], Braintree.prototype, \"initialize\", null);\n    __decorate([\n        Cordova({\n            platforms: ['iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Braintree.prototype, \"setupApplePay\", null);\n    __decorate([\n        Cordova({\n            platforms: ['Android', 'iOS']\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], Braintree.prototype, \"presentDropInPaymentUI\", null);\n    /**\n     * @name Braintree\n     * @description\n     * This plugin enables the use of the Braintree Drop-In Payments UI in your Ionic applications on Android and iOS, using the native Drop-In UI for each platform (not the Javascript SDK).\n     *\n     *  Ionic Native utilizes [a maintained fork](https://github.com/taracque/cordova-plugin-braintree) of the original `cordova-plugin-braintree`\n     *\n     *  For information on how to use Apple Pay with this plugin, please refer to the [plugin documentation](https://github.com/Taracque/cordova-plugin-braintree#apple-pay-ios-only)\n     *\n     * **NOTE**: This is not a complete payments solution. All of the Braintree client-side UIs simply generate a payment nonce that must then be processed by your server to complete the payment.\n     * See the [Braintree Node server documentation](https://developers.braintreepayments.com/start/hello-server/node) for details and a [sample Express server](https://github.com/braintree/braintree_express_example) that implements the required functionality.\n     *\n     * @usage\n     * ```typescript\n     * import { Braintree, ApplePayOptions, PaymentUIOptions } from '@ionic-native/braintree';\n     *\n     * constructor(private braintree: Braintree) { }\n     *\n     * ...\n     *\n     * // Your Braintree `Tokenization Key` from the Braintree dashboard.\n     * // Alternatively you can also generate this token server-side\n     * // using a client ID in order to allow users to use stored payment methods.\n     * // See the [Braintree Client Token documentation](https://developers.braintreepayments.com/reference/request/client-token/generate/node#customer_id) for details.\n     * const BRAINTREE_TOKEN = '<YOUR_BRAINTREE_TOKEN>';\n     *\n     * // NOTE: Do not provide this unless you have configured your Apple Developer account\n     * // as well as your Braintree merchant account, otherwise the Braintree module will fail.\n     * const appleOptions: ApplePayOptions = {\n     *   merchantId: '<YOUR MERCHANT ID>',\n     *   currency: 'USD',\n     *   country: 'US'\n     * };\n     *\n     * const paymentOptions: PaymentUIOptions = {\n     *   amount: '14.99',\n     *   primaryDescription: 'Your product or service (per /item, /month, /week, etc)',\n     * };\n     *\n     * this.braintree.initialize(BRAINTREE_TOKEN)\n     *   .then(() => this.braintree.setupApplePay(appleOptions))\n     *   .then(() => this.braintree.presentDropInPaymentUI(paymentOptions))\n     *   .then((result: PaymentUIResult) => {\n     *     if (result.userCancelled) {\n     *       console.log(\"User cancelled payment dialog.\");\n     *     } else {\n     *       console.log(\"User successfully completed payment!\");\n     *       console.log(\"Payment Nonce: \" + result.nonce);\n     *       console.log(\"Payment Result.\", result);\n     *     }\n     *   })\n     *   .catch((error: string) => console.error(error));\n     *\n     * ```\n     *\n     * @interfaces\n     * ApplePayOptions\n     * PaymentUIOptions\n     * PaymentUIResult\n     */\n    Braintree = __decorate([\n        Plugin({\n            pluginName: 'Braintree',\n            plugin: 'cordova-plugin-braintree',\n            pluginRef: 'BraintreePlugin',\n            repo: 'https://github.com/taracque/cordova-plugin-braintree',\n            platforms: ['Android', 'iOS'],\n            install: 'ionic cordova plugin add https://github.com/taracque/cordova-plugin-braintree',\n            installVariables: []\n        })\n    ], Braintree);\n    return Braintree;\n}(IonicNativePlugin));\nexport { Braintree };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/braintree/index.js\n// module id = 664\n// module chunks = 6"],"sourceRoot":""}